# automatically generated by the FlatBuffers compiler, do not modify

# namespace: SmartCamera

import flatbuffers
from flatbuffers.compat import import_numpy

np = import_numpy()


class CarObject(object):
    __slots__ = ["_tab"]

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = CarObject()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsCarObject(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)

    # CarObject
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # CarObject
    def BoundingBoxType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # CarObject
    def BoundingBox(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            from flatbuffers.table import Table

            obj = Table(bytearray(), 0)
            self._tab.Union(obj, o)
            return obj
        return None

    # CarObject
    def BoundingBoxScore(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # CarObject
    def LicensePlate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from modules.cloudapp.SmartCamera.CarLicensePlate import CarLicensePlate

            obj = CarLicensePlate()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None


def CarObjectStart(builder):
    builder.StartObject(4)


def Start(builder):
    return CarObjectStart(builder)


def CarObjectAddBoundingBoxType(builder, boundingBoxType):
    builder.PrependUint8Slot(0, boundingBoxType, 0)


def AddBoundingBoxType(builder, boundingBoxType):
    return CarObjectAddBoundingBoxType(builder, boundingBoxType)


def CarObjectAddBoundingBox(builder, boundingBox):
    builder.PrependUOffsetTRelativeSlot(
        1, flatbuffers.number_types.UOffsetTFlags.py_type(boundingBox), 0
    )


def AddBoundingBox(builder, boundingBox):
    return CarObjectAddBoundingBox(builder, boundingBox)


def CarObjectAddBoundingBoxScore(builder, boundingBoxScore):
    builder.PrependFloat32Slot(2, boundingBoxScore, 0.0)


def AddBoundingBoxScore(builder, boundingBoxScore):
    return CarObjectAddBoundingBoxScore(builder, boundingBoxScore)


def CarObjectAddLicensePlate(builder, licensePlate):
    builder.PrependUOffsetTRelativeSlot(
        3, flatbuffers.number_types.UOffsetTFlags.py_type(licensePlate), 0
    )


def AddLicensePlate(builder, licensePlate):
    return CarObjectAddLicensePlate(builder, licensePlate)


def CarObjectEnd(builder):
    return builder.EndObject()


def End(builder):
    return CarObjectEnd(builder)
