# automatically generated by the FlatBuffers compiler, do not modify

# namespace: SmartCamera

import flatbuffers
from flatbuffers.compat import import_numpy

np = import_numpy()


class PlateTextResult(object):
    __slots__ = ["_tab"]

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = PlateTextResult()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsPlateTextResult(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)

    # PlateTextResult
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # PlateTextResult
    def Prefecture(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # PlateTextResult
    def ClassificationNumber(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # PlateTextResult
    def Hiragana(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # PlateTextResult
    def PlateNumber(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None


def PlateTextResultStart(builder):
    builder.StartObject(4)


def Start(builder):
    return PlateTextResultStart(builder)


def PlateTextResultAddPrefecture(builder, prefecture):
    builder.PrependUOffsetTRelativeSlot(
        0, flatbuffers.number_types.UOffsetTFlags.py_type(prefecture), 0
    )


def AddPrefecture(builder, prefecture):
    return PlateTextResultAddPrefecture(builder, prefecture)


def PlateTextResultAddClassificationNumber(builder, classificationNumber):
    builder.PrependUOffsetTRelativeSlot(
        1, flatbuffers.number_types.UOffsetTFlags.py_type(classificationNumber), 0
    )


def AddClassificationNumber(builder, classificationNumber):
    return PlateTextResultAddClassificationNumber(builder, classificationNumber)


def PlateTextResultAddHiragana(builder, hiragana):
    builder.PrependUOffsetTRelativeSlot(
        2, flatbuffers.number_types.UOffsetTFlags.py_type(hiragana), 0
    )


def AddHiragana(builder, hiragana):
    return PlateTextResultAddHiragana(builder, hiragana)


def PlateTextResultAddPlateNumber(builder, plateNumber):
    builder.PrependUOffsetTRelativeSlot(
        3, flatbuffers.number_types.UOffsetTFlags.py_type(plateNumber), 0
    )


def AddPlateNumber(builder, plateNumber):
    return PlateTextResultAddPlateNumber(builder, plateNumber)


def PlateTextResultEnd(builder):
    return builder.EndObject()


def End(builder):
    return PlateTextResultEnd(builder)
